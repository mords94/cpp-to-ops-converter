#loc1 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":386:6)
#loc7 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":387:3)
#loc9 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":388:5)
module attributes {dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<i64, dense<64> : vector<2xi32>>, #dlti.dl_entry<f80, dense<128> : vector<2xi32>>, #dlti.dl_entry<i1, dense<8> : vector<2xi32>>, #dlti.dl_entry<i8, dense<8> : vector<2xi32>>, #dlti.dl_entry<i16, dense<16> : vector<2xi32>>, #dlti.dl_entry<i32, dense<32> : vector<2xi32>>, #dlti.dl_entry<f16, dense<16> : vector<2xi32>>, #dlti.dl_entry<f64, dense<64> : vector<2xi32>>, #dlti.dl_entry<f128, dense<128> : vector<2xi32>>>, llvm.data_layout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-apple-macosx13.0.0", "polygeist.target-cpu" = "penryn", "polygeist.target-features" = "+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87", "polygeist.tune-cpu" = "generic"} {
  memref.global @im : memref<1xi32> = uninitialized loc(#loc0)
  memref.global @jm : memref<1xi32> = uninitialized loc(#loc0)
  func.func @test_count(%arg0: memref<?xf32> loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":386:6), %arg1: memref<?xf32> loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":386:6)) attributes {llvm.linkage = #llvm.linkage<external>} {
    %c1_i32 = arith.constant 1 : i32 loc(#loc2)
    %c0_i32 = arith.constant 0 : i32 loc(#loc3)
    %0 = memref.get_global @jm : memref<1xi32> loc(#loc4)
    %1 = memref.get_global @im : memref<1xi32> loc(#loc5)
    %2 = scf.while (%arg2 = %c0_i32) : (i32) -> i32 {
      %3 = affine.load %0[0] : memref<1xi32> loc(#loc4)
      %4 = arith.cmpi slt, %arg2, %3 : i32 loc(#loc6)
      scf.condition(%4) %arg2 : i32 loc(#loc7)
    } do {
    ^bb0(%arg2: i32 loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":387:3)):
      %3:2 = scf.while (%arg3 = %c0_i32) : (i32) -> (i32, i32) {
        %5 = affine.load %1[0] : memref<1xi32> loc(#loc5)
        %6 = arith.cmpi slt, %arg3, %5 : i32 loc(#loc8)
        scf.condition(%6) %5, %arg3 : i32, i32 loc(#loc9)
      } do {
      ^bb0(%arg3: i32 loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":388:5), %arg4: i32 loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":388:5)):
        %5 = arith.muli %arg2, %arg3 : i32 loc(#loc10)
        %6 = arith.addi %arg4, %5 : i32 loc(#loc11)
        %7 = arith.index_cast %6 : i32 to index loc(#loc12)
        %8 = arith.addi %arg4, %c1_i32 : i32 loc(#loc13)
        %9 = arith.addi %8, %5 : i32 loc(#loc11)
        %10 = arith.index_cast %9 : i32 to index loc(#loc14)
        %11 = memref.load %arg1[%10] : memref<?xf32> loc(#loc15)
        %12 = arith.addf %11, %11 : f32 loc(#loc16)
        %13 = arith.addf %12, %11 : f32 loc(#loc17)
        memref.store %13, %arg0[%7] : memref<?xf32> loc(#loc18)
        scf.yield %8 : i32 loc(#loc9)
      } loc(#loc5)
      %4 = arith.addi %arg2, %c1_i32 : i32 loc(#loc19)
      scf.yield %4 : i32 loc(#loc7)
    } loc(#loc4)
    return loc(#loc20)
  } loc(#loc1)
} loc(#loc0)
#loc0 = loc(unknown)
#loc2 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":390:25)
#loc3 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":387:16)
#loc4 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":387:23)
#loc5 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":388:25)
#loc6 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":387:21)
#loc8 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":388:23)
#loc10 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":4:43)
#loc11 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":4:38)
#loc12 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":389:22)
#loc13 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":390:23)
#loc14 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":390:30)
#loc15 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":390:11)
#loc16 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":390:32)
#loc17 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":390:55)
#loc18 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":389:24)
#loc19 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":387:28)
#loc20 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//ITK_POM2K/pom2k_reduced.c":393:1)
