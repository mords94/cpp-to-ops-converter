#loc1 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":37:6)
#loc10 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":38:3)
#loc13 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":39:5)
module attributes {dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<i64, dense<64> : vector<2xi32>>, #dlti.dl_entry<f80, dense<128> : vector<2xi32>>, #dlti.dl_entry<i1, dense<8> : vector<2xi32>>, #dlti.dl_entry<i8, dense<8> : vector<2xi32>>, #dlti.dl_entry<i16, dense<16> : vector<2xi32>>, #dlti.dl_entry<i32, dense<32> : vector<2xi32>>, #dlti.dl_entry<f16, dense<16> : vector<2xi32>>, #dlti.dl_entry<f64, dense<64> : vector<2xi32>>, #dlti.dl_entry<f128, dense<128> : vector<2xi32>>>, llvm.data_layout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-apple-macosx13.0.0", "polygeist.target-cpu" = "penryn", "polygeist.target-features" = "+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87", "polygeist.tune-cpu" = "generic"} {
  memref.global @LEFT_EDGE : memref<1xi32> = dense<0> loc(#loc0)
  memref.global @jm : memref<1xi32> loc(#loc0)
  memref.global @im : memref<1xi32> loc(#loc0)
  func.func @example(%arg0: memref<?xf32> loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":37:6), %arg1: memref<?xf32> loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":37:6), %arg2: memref<?xf32> loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":37:6), %arg3: memref<?xf32> loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":37:6)) attributes {llvm.linkage = #llvm.linkage<external>} {
    %c-1_i32 = arith.constant -1 : i32 loc(#loc2)
    %cst = arith.constant 2.000000e+00 : f64 loc(#loc3)
    %c1_i32 = arith.constant 1 : i32 loc(#loc2)
    %c0_i32 = arith.constant 0 : i32 loc(#loc4)
    %c0 = arith.constant 0 : index loc(#loc5)
    %0 = memref.get_global @im : memref<1xi32> loc(#loc6)
    %1 = memref.get_global @jm : memref<1xi32> loc(#loc7)
    %2 = memref.get_global @LEFT_EDGE : memref<1xi32> loc(#loc8)
    %3 = scf.while (%arg4 = %c0_i32) : (i32) -> i32 {
      %c0_0 = arith.constant 0 : index loc(#loc6)
      %4 = memref.load %0[%c0_0] : memref<1xi32> loc(#loc6)
      %5 = arith.cmpi slt, %arg4, %4 : i32 loc(#loc9)
      scf.condition(%5) %arg4 : i32 loc(#loc10)
    } do {
    ^bb0(%arg4: i32 loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":38:3)):
      %4 = arith.addi %arg4, %c-1_i32 : i32 loc(#loc11)
      %5 = scf.while (%arg5 = %c1_i32) : (i32) -> i32 {
        %c0_0 = arith.constant 0 : index loc(#loc7)
        %7 = memref.load %1[%c0_0] : memref<1xi32> loc(#loc7)
        %8 = arith.cmpi slt, %arg5, %7 : i32 loc(#loc12)
        scf.condition(%8) %arg5 : i32 loc(#loc13)
      } do {
      ^bb0(%arg5: i32 loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":39:5)):
        %c0_0 = arith.constant 0 : index loc(#loc14)
        %7 = memref.load %0[%c0_0] : memref<1xi32> loc(#loc14)
        %8 = arith.muli %arg5, %7 : i32 loc(#loc15)
        %9 = arith.addi %arg4, %8 : i32 loc(#loc16)
        %10 = arith.index_cast %9 : i32 to index loc(#loc17)
        %c0_1 = arith.constant 0 : index loc(#loc18)
        %11 = memref.load %2[%c0_1] : memref<1xi32> loc(#loc18)
        %12 = arith.muli %11, %7 : i32 loc(#loc15)
        %13 = arith.addi %4, %12 : i32 loc(#loc16)
        %14 = arith.index_cast %13 : i32 to index loc(#loc19)
        %15 = arith.addi %14, %c0 : index loc(#loc20)
        %16 = memref.load %arg0[%15] : memref<?xf32> loc(#loc20)
        %17 = arith.extf %16 : f32 to f64 loc(#loc20)
        %18 = arith.mulf %17, %cst : f64 loc(#loc21)
        %19 = arith.addi %arg5, %c-1_i32 : i32 loc(#loc22)
        %20 = arith.muli %19, %7 : i32 loc(#loc15)
        %21 = arith.addi %arg4, %20 : i32 loc(#loc16)
        %22 = arith.index_cast %21 : i32 to index loc(#loc23)
        %23 = arith.addi %22, %c0 : index loc(#loc24)
        %24 = memref.load %arg1[%23] : memref<?xf32> loc(#loc24)
        %25 = arith.extf %24 : f32 to f64 loc(#loc24)
        %26 = arith.subf %18, %25 : f64 loc(#loc25)
        %27 = arith.truncf %26 : f64 to f32 loc(#loc3)
        %28 = arith.addi %10, %c0 : index loc(#loc26)
        memref.store %27, %arg2[%28] : memref<?xf32> loc(#loc27)
        %29 = arith.addi %arg5, %c1_i32 : i32 loc(#loc28)
        scf.yield %29 : i32 loc(#loc13)
      } loc(#loc7)
      %6 = arith.addi %arg4, %c1_i32 : i32 loc(#loc29)
      scf.yield %6 : i32 loc(#loc10)
    } loc(#loc6)
    return loc(#loc30)
  } loc(#loc1)
} loc(#loc0)
#loc0 = loc(unknown)
#loc2 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":39:18)
#loc3 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":41:11)
#loc4 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":38:16)
#loc5 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":39:10)
#loc6 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":38:23)
#loc7 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":39:25)
#loc8 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":41:33)
#loc9 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":38:21)
#loc11 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":41:28)
#loc12 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":39:23)
#loc14 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/pom2k_c_header.h":6:36)
#loc15 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/pom2k_c_header.h":5:43)
#loc16 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/pom2k_c_header.h":5:38)
#loc17 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":40:22)
#loc18 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/pom2k_c_header.h":5:40)
#loc19 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":41:43)
#loc20 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":41:17)
#loc21 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":41:15)
#loc22 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":41:61)
#loc23 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":41:65)
#loc24 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":41:47)
#loc25 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":41:45)
#loc26 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":40:7)
#loc27 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":40:24)
#loc28 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":39:30)
#loc29 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":38:28)
#loc30 = loc("/Users/mac/Projects/mlir/cpp-to-ops-converter/script/..//in/test.c":46:1)

